##################################################
# DO Community Playbooks: LEMP on Ubuntu 18.04
##################################################
---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install Prerequisites
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude' ]

    - name: Install LEMP Packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'nginx', 'php-fpm', 'php-mysql' ]
    
# Nginx Configuration
    - name: Sets Nginx conf file
      template:
        src: "files/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{ http_conf }}"

    - name: Enables new site
      file:
        src: "/etc/nginx/sites-available/{{ http_conf }}"
        dest: "/etc/nginx/sites-enabled/{{ http_conf }}"
        state: link
      notify: Reload Nginx
    
    - name: Removes "default" site
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: Reload Nginx

# MySQL Configuration

    # - name: Specify MySQL root password before installing
    #   # without this, auth_socket will be used for root@localhost, and we won't be able to set the password
    #   debconf:
    #     name: 'mysql-server'
    #     question: 'mysql-server/root_password'
    #     value: "{{ mysql_root_password }}"
    #     vtype: 'password'
    #   become: yes

    # - name: Confirm MySQL root password before installing
    #   debconf:
    #     name: 'mysql-server'
    #     question: 'mysql-server/root_password'
    #     value: "{{ mysql_root_password }}"
    #     vtype: 'password'
    #   become: yes

    - name: Install MySQL server
      apt: name={{ item }} state=present
      with_items:
        - mysql-server
        - python3-pymysql
      become: yes

    - name: Start MySQL
      service:
        name: mysql 
        state: started
        enabled: true
      become: yes

    # - name: Add a mysql user
    #   mysql_user:
    #     name: bob
    #     password: 12345
    #     priv: '*.*:ALL,GRANT'
    #     state: present

    - name: Create /root/.my.cnf (from template) with password credentials
      template:
        src: files/my.cnf.j2
        dest: /root/.my.cnf
        owner: jeff
        mode: 0600
      become: yes
      notify: Restart MySQL

    - name: Sets the root password 
      mysql_user: 
        name: root 
        login_user: jeff
        login_password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

# UFW Configuration
    - name: "UFW - Allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp

# Sets Up PHP Info Page
    - name: Sets Up PHP Info Page
      template:
        src: "files/info.php.j2"
        dest: "/var/www/html/info.php"

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

    - name: Restart MySQL
      service:
        name: mysql
        state: restarted

